FROM ubuntu:22.04

# Set environment variables
ENV DEBIAN_FRONTEND=noninteractive
ENV INSTALL_DIR=/home/ubuntu
ENV PUBLIC_IP=127.0.0.1

# Install basic tools and dependencies
RUN apt-get update && apt-get upgrade -y && \
    apt-get install -y \
    build-essential \
    git \
    cmake \
    pkg-config \
    automake \
    libtool \
    gengetopt \
    make \
    gcc \
    g++ \
    nginx \
    libmicrohttpd-dev \
    libjansson-dev \
    libssl-dev \
    libsrtp2-dev \
    libsofia-sip-ua-dev \
    libglib2.0-dev \
    libopus-dev \
    libogg-dev \
    libcurl4-openssl-dev \
    liblua5.3-dev \
    libconfig-dev \
    libnice-dev \
    libwebsockets-dev \
    libspeexdsp-dev \
    libavutil-dev \
    libavcodec-dev \
    libavformat-dev \
    curl \
    net-tools && \
    apt-get clean

# Create installation directory
RUN mkdir -p $INSTALL_DIR
WORKDIR $INSTALL_DIR

# Install usrsctp
RUN git clone https://github.com/sctplab/usrsctp.git && \
    cd usrsctp && \
    ./bootstrap && \
    ./configure && \
    make && make install && \
    ldconfig && \
    cd ..

# Install libsrtp from source
RUN curl -L https://github.com/cisco/libsrtp/archive/v2.5.0.tar.gz -o libsrtp-2.5.0.tar.gz && \
    tar xfv libsrtp-2.5.0.tar.gz && \
    cd libsrtp-2.5.0 && \
    ./configure --prefix=/usr && \
    make && make install && \
    ldconfig && \
    cd ..

# Install Janus Gateway
RUN git clone https://github.com/meetecho/janus-gateway.git && \
    cd janus-gateway && \
    sh autogen.sh && \
    ./configure --prefix=/opt/janus \
        --enable-websockets \
        --enable-libsrtp2 && \
    make && make install && make configs

# Create necessary directories and set permissions
RUN mkdir -p /opt/janus/lib/janus/loggers && \
    chmod 755 /opt/janus/lib/janus/loggers && \
    chown root:root /opt/janus/lib/janus/loggers && \
    mkdir -p /opt/janus/recordings && \
    chmod 755 /opt/janus/recordings && \
    chown root:root /opt/janus/recordings

# Copy Janus core configuration
RUN echo 'general: {\n\
    configs_folder = "/opt/janus/etc/janus"\n\
    plugins_folder = "/opt/janus/lib/janus/plugins"\n\
    transports_folder = "/opt/janus/lib/janus/transports"\n\
    events_folder = "/opt/janus/lib/janus/events"\n\
    loggers_folder = "/opt/janus/lib/janus/loggers"\n\
    debug_level = 4\n\
    admin_secret = "janusoverlord"\n\
    protected_folders = [\n\
        "/bin",\n\
        "/boot",\n\
        "/dev",\n\
        "/etc",\n\
        "/initrd",\n\
        "/lib",\n\
        "/lib32",\n\
        "/lib64",\n\
        "/proc",\n\
        "/sbin",\n\
        "/sys",\n\
        "/usr",\n\
        "/var",\n\
        "/opt/janus/bin",\n\
        "/opt/janus/etc",\n\
        "/opt/janus/include",\n\
        "/opt/janus/lib",\n\
        "/opt/janus/lib32",\n\
        "/opt/janus/lib64",\n\
        "/opt/janus/sbin"\n\
    ]\n\
}\n\
certificates: {}\n\
media: {}\n\
nat: {\n\
    stun_server = "stun.l.google.com"\n\
    stun_port = 19302\n\
    nice_debug = false\n\
    full_trickle = true\n\
    ice_lite = true\n\
    ignore_mdns = true\n\
    nat_1_1_mapping = "auto"\n\
}\n\
plugins: {}\n\
transports: {\n\
    disable = "libjanus_rabbitmq.so"\n\
}\n\
loggers: {\n\
    disable = "libjanus_jsonlog.so"\n\
}\n\
events: {}' > /opt/janus/etc/janus/janus.jcfg

# Copy video room plugin configuration
RUN echo 'general: {\n\
    admin_key = "supersecret"\n\
    events = true\n\
    string_ids = true\n\
}\n\
room-1234: {\n\
    description = "Demo Room"\n\
    secret = "adminpwd"\n\
    publishers = 50\n\
    bitrate = 128000\n\
    fir_freq = 10\n\
    audiocodec = "opus"\n\
    videocodec = "h264"\n\
    record = true\n\
    rec_dir = "/opt/janus/recordings"\n\
    lock_record = true\n\
}' > /opt/janus/etc/janus/janus.plugin.videoroom.jcfg

# Copy Unix sockets transport configuration
RUN echo 'general: {\n\
    enabled = true\n\
    json = "indented"\n\
    path = "/tmp/janus.sock"\n\
}\n\
admin: {\n\
    admin_enabled = true\n\
    admin_path = "/tmp/janus-admin.sock"\n\
}' > /opt/janus/etc/janus/janus.transport.pfunix.jcfg

# Copy WebSockets transport configuration
RUN echo 'general: {\n\
    json = "indented"\n\
    ws = true\n\
    ws_port = 8188\n\
    wss = false\n\
}\n\
admin: {\n\
    admin_ws = false\n\
    admin_ws_port = 7188\n\
    admin_wss = false\n\
}\n\
cors: {}\n\
certificates: {}' > /opt/janus/etc/janus/janus.transport.websockets.jcfg

# Copy streaming plugin configuration
RUN echo 'general: {\n\
    admin_key = "supersecret"\n\
    events = true\n\
    string_ids = false\n\
}\n\
rtp-sample: {\n\
    type = "rtp"\n\
    id = 1\n\
    description = "MDT Test "\n\
    metadata = "You can use this metadata section to put any info you want!"\n\
    audio = true\n\
    video = true\n\
    audioport = 5002\n\
    audiopt = 111\n\
    audiocodec = "opus"\n\
    videoport = 5004\n\
    videopt = 100\n\
    videocodec = "h264"\n\
    secret = "adminpwd"\n\
}\n\
multistream-test: {\n\
    type = "rtp"\n\
    id = 1234\n\
    description = "Multistream test (1 audio, 50 video)"\n\
    metadata = "This is an example of a multistream mountpoint: you will get an audio stream and fifty video feeds"\n\
    media = (\n\
        {\n\
            type = "audio"\n\
            mid = "a"\n\
            label = "Audio stream"\n\
            port = 5100\n\
            pt = 111\n\
            codec = "opus"\n\
            record = true\n\
            recfile = "/opt/janus/recordings/multistream-test-a-%Y%m%d%H%M%S.mjr"\n\
        },\n\
        {\n\
            type = "video"\n\
            mid = "v1"\n\
            label = "Drone Video stream #1"\n\
            port = 5101\n\
            pt = 100\n\
            codec = "h264"\n\
            record = true\n\
            recfile = "/opt/janus/recordings/multistream-test-v1-%Y%m%d%H%M%S.mjr"\n\
        }\n\
    )\n\
    secret = "adminpwd"\n\
}\n\
file-live-sample: {\n\
    type = "live"\n\
    id = 2\n\
    description = "a-law file source (radio broadcast)"\n\
    filename = "/opt/janus/share/janus/streams/radio.alaw"\n\
    audio = true\n\
    video = false\n\
    secret = "adminpwd"\n\
}\n\
file-ondemand-sample: {\n\
    type = "ondemand"\n\
    id = 3\n\
    description = "mu-law file source (music)"\n\
    filename = "/opt/janus/share/janus/streams/music.mulaw"\n\
    audio = true\n\
    video = false\n\
    secret = "adminpwd"\n\
}' > /opt/janus/etc/janus/janus.plugin.streaming.jcfg

# Copy demo files to nginx web root
RUN cp -r /opt/janus/share/janus/html/* /var/www/html/

# Expose necessary ports
EXPOSE 80 8088 8188 5002 5004 5100-5150

# Copy entrypoint script with EC2 metadata service
RUN echo '#!/bin/bash\n\
# Auto-detect public IP using EC2 metadata service\n\
PUBLIC_IP=$(curl -s http://169.254.169.254/latest/meta-data/public-ipv4 || echo "127.0.0.1")\n\
echo "Using public IP: $PUBLIC_IP"\n\
/opt/janus/bin/janus --nat-1-1=$PUBLIC_IP -d 5' > /entrypoint.sh && \
    chmod +x /entrypoint.sh

# Set entrypoint
ENTRYPOINT ["/entrypoint.sh"]